# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/remote-cpp-env:0.5 -f Dockerfile.remote-cpp-env .
#   docker run -d --cap-add sys_ptrace -p 127.0.0.1:2222:22 --name clion_remote_env clion/remote-cpp-env:0.5
#   ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# stop:
#   docker stop clion_remote_env
# 
# ssh credentials (test user):
#   user@password 

FROM debian:11

RUN sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list
RUN apt-get update && apt-get -y install ca-certificates tzdata

RUN apt-get update \
  && apt-get install -y ssh \
  build-essential \
  clangd \
  clang-format \
  clang-tidy \
  gcc \
  g++ \
  gdb \
  git \
  make \
  ninja-build \
  autoconf \
  automake \
  locales-all \
  dos2unix \
  rsync \
  tar \
  wget \
  python \
  && apt-get clean

# Manully install cmake
RUN CMAKE_VERSION=3.26.0-rc6; \
  wget -O cmake-${CMAKE_VERSION}-Linux-x86_64.sh https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh \
  && sh cmake-${CMAKE_VERSION}-Linux-x86_64.sh -- --skip-license --prefix=/usr \
  && rm -f cmake-${CMAKE_VERSION}-Linux-x86_64.sh

RUN ( \
  echo 'LogLevel INFO'; \
  echo 'PermitRootLogin yes'; \
  echo 'PasswordAuthentication yes'; \
  echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_debug_config \
  && mkdir /run/sshd

RUN echo "root:password" | chpasswd

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_debug_config"]
