# Remote docker environment for CLion and VS Code.
#
# Build and run:
#   docker build -t remote-cpp-env:1.0 -f Dockerfile.remote-cpp-env .
#   docker run -d --cap-add sys_ptrace -p 127.0.0.1:2222:22 --name dev_container remote-cpp-env:0.5
#
# stop:
#   docker stop dev_container
# 
# ssh credentials:
#   root@password 

FROM debian:latest

# install build tool, clangd is for vscode
RUN sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list
RUN DEBIAN_FRONTEND="noninteractive" apt update \
    && apt-get install -y \
    ssh \
    build-essential \
    clangd-13 \
    clang-format-13 \
    clang-tidy-13 \
    gcc \
    g++ \
    gdb \
    git \
    make \
    ninja-build \
    autoconf \
    automake \
    locales-all \
    dos2unix \
    rsync \
    tar \
    wget \
    python \
    zsh \
    && apt clean

# install cmake
RUN CMAKE_VERSION=3.26.0; \
    wget -O cmake-${CMAKE_VERSION}-Linux-x86_64.sh https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh \
    && sh cmake-${CMAKE_VERSION}-Linux-x86_64.sh -- --skip-license --prefix=/usr \
    && rm -f cmake-${CMAKE_VERSION}-Linux-x86_64.sh

# install zsh
RUN wget -O install.sh https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh \
    && sh install.sh \
    && rm -f install.sh \
    && chsh -s /bin/zsh
RUN git config --global --add oh-my-zsh.hide-dirty 1

# config ssh
RUN ( \
    echo 'LogLevel INFO'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
    ) > /etc/ssh/sshd_debug_config \
    && mkdir /run/sshd

# config root password
RUN echo "root:password" | chpasswd

# config damon command
CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_debug_config"]
